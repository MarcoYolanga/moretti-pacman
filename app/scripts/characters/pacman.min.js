class Pacman{constructor(scaledTileSize,mazeArray,characterUtil){this.scaledTileSize=scaledTileSize,this.mazeArray=mazeArray,this.characterUtil=characterUtil,this.animationTarget=document.getElementById("pacman"),this.pacmanArrow=document.getElementById("pacman-arrow"),this.reset()}reset(){this.setMovementStats(this.scaledTileSize),this.setSpriteAnimationStats(),this.setStyleMeasurements(this.scaledTileSize,this.spriteFrames),this.setDefaultPosition(this.scaledTileSize),this.setSpriteSheet(this.direction),this.pacmanArrow.style.backgroundImage="url(app/style/graphics/"+`spriteSheets/characters/pacman/arrow_${this.direction}.svg)`}setMovementStats(scaledTileSize){this.velocityPerMs=this.calculateVelocityPerMs(scaledTileSize),this.desiredDirection=this.characterUtil.directions.left,this.direction=this.characterUtil.directions.left,this.moving=!1}setSpriteAnimationStats(){this.specialAnimation=!1,this.display=!0,this.animate=!0,this.loopAnimation=!0,this.msBetweenSprites=50,this.msSinceLastSprite=0,this.spriteFrames=4,this.backgroundOffsetPixels=0,this.animationTarget.style.backgroundPosition="0px 0px"}setStyleMeasurements(scaledTileSize,spriteFrames){this.measurement=2*scaledTileSize,this.animationTarget.style.height=`${this.measurement}px`,this.animationTarget.style.width=`${this.measurement}px`,this.animationTarget.style.backgroundSize=`${this.measurement*spriteFrames}px`,this.pacmanArrow.style.height=`${2*this.measurement}px`,this.pacmanArrow.style.width=`${2*this.measurement}px`,this.pacmanArrow.style.backgroundSize=`${2*this.measurement}px`}setDefaultPosition(scaledTileSize){this.defaultPosition={top:22.5*scaledTileSize,left:13*scaledTileSize},this.position=Object.assign({},this.defaultPosition),this.oldPosition=Object.assign({},this.position),this.animationTarget.style.top=`${this.position.top}px`,this.animationTarget.style.left=`${this.position.left}px`}calculateVelocityPerMs(scaledTileSize){const velocityPerSecond=11*scaledTileSize;return velocityPerSecond/1e3}setSpriteSheet(direction){this.animationTarget.style.backgroundImage="url(app/style/graphics/"+`spriteSheets/characters/pacman/pacman_${direction}_moretti.png)`}prepDeathAnimation(){this.loopAnimation=!1,this.msBetweenSprites=125,this.spriteFrames=12,this.specialAnimation=!0,this.backgroundOffsetPixels=0;const bgSize=this.measurement*this.spriteFrames;this.animationTarget.style.backgroundSize=`${bgSize}px`,this.animationTarget.style.backgroundImage="url(app/style/graphics/spriteSheets/characters/pacman/pacman_death.svg)",this.animationTarget.style.backgroundPosition="0px 0px",this.pacmanArrow.style.backgroundImage=""}changeDirection(newDirection,startMoving){this.desiredDirection=newDirection,this.pacmanArrow.style.backgroundImage="url(app/style/graphics/"+`spriteSheets/characters/pacman/arrow_${this.desiredDirection}.svg)`,startMoving&&(this.moving=!0)}updatePacmanArrowPosition(position,scaledTileSize){this.pacmanArrow.style.top=`${position.top-scaledTileSize}px`,this.pacmanArrow.style.left=`${position.left-scaledTileSize}px`}handleSnappedMovement(elapsedMs){const desired=this.characterUtil.determineNewPositions(this.position,this.desiredDirection,this.velocityPerMs,elapsedMs,this.scaledTileSize),alternate=this.characterUtil.determineNewPositions(this.position,this.direction,this.velocityPerMs,elapsedMs,this.scaledTileSize);return this.characterUtil.checkForWallCollision(desired.newGridPosition,this.mazeArray,this.desiredDirection)?this.characterUtil.checkForWallCollision(alternate.newGridPosition,this.mazeArray,this.direction)?(this.moving=!1,this.position):alternate.newPosition:(this.direction=this.desiredDirection,this.setSpriteSheet(this.direction),desired.newPosition)}handleUnsnappedMovement(gridPosition,elapsedMs){const desired=this.characterUtil.determineNewPositions(this.position,this.desiredDirection,this.velocityPerMs,elapsedMs,this.scaledTileSize),alternate=this.characterUtil.determineNewPositions(this.position,this.direction,this.velocityPerMs,elapsedMs,this.scaledTileSize);return this.characterUtil.turningAround(this.direction,this.desiredDirection)?(this.direction=this.desiredDirection,this.setSpriteSheet(this.direction),desired.newPosition):this.characterUtil.changingGridPosition(gridPosition,alternate.newGridPosition)?this.characterUtil.snapToGrid(gridPosition,this.direction,this.scaledTileSize):alternate.newPosition}draw(interp){const newTop=this.characterUtil.calculateNewDrawValue(interp,"top",this.oldPosition,this.position),newLeft=this.characterUtil.calculateNewDrawValue(interp,"left",this.oldPosition,this.position);this.animationTarget.style.top=`${newTop}px`,this.animationTarget.style.left=`${newLeft}px`,this.animationTarget.style.visibility=this.display?this.characterUtil.checkForStutter(this.position,this.oldPosition):"hidden",this.pacmanArrow.style.visibility=this.animationTarget.style.visibility,this.updatePacmanArrowPosition(this.position,this.scaledTileSize);const updatedProperties=this.characterUtil.advanceSpriteSheet(this);this.msSinceLastSprite=updatedProperties.msSinceLastSprite,this.animationTarget=updatedProperties.animationTarget,this.backgroundOffsetPixels=updatedProperties.backgroundOffsetPixels}update(elapsedMs){if(this.oldPosition=Object.assign({},this.position),this.moving){const gridPosition=this.characterUtil.determineGridPosition(this.position,this.scaledTileSize);JSON.stringify(this.position)===JSON.stringify(this.characterUtil.snapToGrid(gridPosition,this.direction,this.scaledTileSize))?this.position=this.handleSnappedMovement(elapsedMs):this.position=this.handleUnsnappedMovement(gridPosition,elapsedMs),this.position=this.characterUtil.handleWarp(this.position,this.scaledTileSize,this.mazeArray)}(this.moving||this.specialAnimation)&&(this.msSinceLastSprite+=elapsedMs)}}module.exports=Pacman;
//# sourceMappingURL=pacman.min.js.map