class Ghost{constructor(scaledTileSize,mazeArray,pacman,name,level,characterUtil,blinky){this.scaledTileSize=scaledTileSize,this.mazeArray=mazeArray,this.pacman=pacman,this.name=name,this.level=level,this.characterUtil=characterUtil,this.blinky=blinky,this.animationTarget=document.getElementById(name),this.reset()}reset(fullGameReset){fullGameReset&&(delete this.defaultSpeed,delete this.cruiseElroy),this.setDefaultMode(),this.setMovementStats(this.pacman,this.name,this.level),this.setSpriteAnimationStats(),this.setStyleMeasurements(this.scaledTileSize,this.spriteFrames),this.setDefaultPosition(this.scaledTileSize,this.name),this.setSpriteSheet(this.name,this.direction,this.mode)}setDefaultMode(){this.allowCollision=!0,this.defaultMode="scatter",this.mode="scatter","blinky"!==this.name&&(this.idleMode="idle")}setMovementStats(pacman,name,level){const pacmanSpeed=pacman.velocityPerMs,levelAdjustment=level/100;switch(this.slowSpeed=pacmanSpeed*(.75+levelAdjustment),this.mediumSpeed=pacmanSpeed*(.875+levelAdjustment),this.fastSpeed=pacmanSpeed*(1+levelAdjustment),this.defaultSpeed||(this.defaultSpeed=this.slowSpeed),this.scaredSpeed=.5*pacmanSpeed,this.transitionSpeed=.4*pacmanSpeed,this.eyeSpeed=2*pacmanSpeed,this.velocityPerMs=this.defaultSpeed,this.moving=!1,name){case"blinky":this.defaultDirection=this.characterUtil.directions.left;break;case"pinky":this.defaultDirection=this.characterUtil.directions.down;break;case"inky":case"clyde":this.defaultDirection=this.characterUtil.directions.up;break;default:this.defaultDirection=this.characterUtil.directions.left}this.direction=this.defaultDirection}setSpriteAnimationStats(){this.display=!0,this.loopAnimation=!0,this.animate=!0,this.msBetweenSprites=250,this.msSinceLastSprite=0,this.spriteFrames=2,this.backgroundOffsetPixels=0,this.animationTarget.style.backgroundPosition="0px 0px"}setStyleMeasurements(scaledTileSize,spriteFrames){this.measurement=2*scaledTileSize,this.animationTarget.style.height=`${this.measurement}px`,this.animationTarget.style.width=`${this.measurement}px`;const bgSize=this.measurement*spriteFrames;this.animationTarget.style.backgroundSize=`${bgSize}px`}setDefaultPosition(scaledTileSize,name){switch(name){case"blinky":this.defaultPosition={top:10.5*scaledTileSize,left:13*scaledTileSize};break;case"pinky":this.defaultPosition={top:13.5*scaledTileSize,left:13*scaledTileSize};break;case"inky":this.defaultPosition={top:13.5*scaledTileSize,left:11*scaledTileSize};break;case"clyde":this.defaultPosition={top:13.5*scaledTileSize,left:15*scaledTileSize};break;default:this.defaultPosition={top:0,left:0}}this.position=Object.assign({},this.defaultPosition),this.oldPosition=Object.assign({},this.position),this.animationTarget.style.top=`${this.position.top}px`,this.animationTarget.style.left=`${this.position.left}px`}setSpriteSheet(name,direction,mode){let emotion="";this.defaultSpeed!==this.slowSpeed&&(emotion=this.defaultSpeed===this.mediumSpeed?"_annoyed":"_angry"),this.animationTarget.style.backgroundImage="scared"===mode?"url(app/style/graphics/"+`spriteSheets/characters/ghosts/branded/scared_${this.scaredColor}.svg)`:"eyes"===mode?"url(app/style/graphics/"+`spriteSheets/characters/ghosts/branded/eyes_${direction}.svg)`:"url(app/style/graphics/"+`spriteSheets/characters/ghosts/branded/${name}/${name}_${direction}`+`${emotion}.png)`}isInTunnel(gridPosition){return 14===gridPosition.y&&(gridPosition.x<6||gridPosition.x>21)}isInGhostHouse(gridPosition){return gridPosition.x>9&&gridPosition.x<18&&gridPosition.y>11&&gridPosition.y<17}getTile(mazeArray,y,x){let tile=!1;return mazeArray[y]&&mazeArray[y][x]&&"X"!==mazeArray[y][x]&&(tile={x:x,y:y}),tile}determinePossibleMoves(gridPosition,direction,mazeArray){const{x:x,y:y}=gridPosition,possibleMoves={up:this.getTile(mazeArray,y-1,x),down:this.getTile(mazeArray,y+1,x),left:this.getTile(mazeArray,y,x-1),right:this.getTile(mazeArray,y,x+1)};return possibleMoves[this.characterUtil.getOppositeDirection(direction)]=!1,Object.keys(possibleMoves).forEach(tile=>{!1===possibleMoves[tile]&&delete possibleMoves[tile]}),possibleMoves}calculateDistance(position,pacman){return Math.sqrt((position.x-pacman.x)**2+(position.y-pacman.y)**2)}getPositionInFrontOfPacman(pacmanGridPosition,spaces){const target=Object.assign({},pacmanGridPosition),pacDirection=this.pacman.direction,propToChange="up"===pacDirection||"down"===pacDirection?"y":"x",tileOffset="up"===pacDirection||"left"===pacDirection?-1*spaces:spaces;return target[propToChange]+=tileOffset,target}determinePinkyTarget(pacmanGridPosition){return this.getPositionInFrontOfPacman(pacmanGridPosition,4)}determineInkyTarget(pacmanGridPosition){const blinkyGridPosition=this.characterUtil.determineGridPosition(this.blinky.position,this.scaledTileSize),pivotPoint=this.getPositionInFrontOfPacman(pacmanGridPosition,2);return{x:pivotPoint.x+(pivotPoint.x-blinkyGridPosition.x),y:pivotPoint.y+(pivotPoint.y-blinkyGridPosition.y)}}determineClydeTarget(gridPosition,pacmanGridPosition){const distance=this.calculateDistance(gridPosition,pacmanGridPosition);return distance>8?pacmanGridPosition:{x:0,y:30}}getTarget(name,gridPosition,pacmanGridPosition,mode){if("eyes"===mode)return{x:13.5,y:10};if("scared"===mode)return pacmanGridPosition;if("scatter"===mode)switch(name){case"blinky":return this.cruiseElroy?pacmanGridPosition:{x:27,y:0};case"pinky":return{x:0,y:0};case"inky":return{x:27,y:30};case"clyde":return{x:0,y:30};default:return{x:0,y:0}}switch(name){case"blinky":return pacmanGridPosition;case"pinky":return this.determinePinkyTarget(pacmanGridPosition);case"inky":return this.determineInkyTarget(pacmanGridPosition);case"clyde":return this.determineClydeTarget(gridPosition,pacmanGridPosition);default:return pacmanGridPosition}}determineBestMove(name,possibleMoves,gridPosition,pacmanGridPosition,mode){let bestDistance="scared"===mode?0:1/0,bestMove;const target=this.getTarget(name,gridPosition,pacmanGridPosition,mode);return Object.keys(possibleMoves).forEach(move=>{const distance=this.calculateDistance(possibleMoves[move],target),betterMove="scared"===mode?distance>bestDistance:distance<bestDistance;betterMove&&(bestDistance=distance,bestMove=move)}),bestMove}determineDirection(name,gridPosition,pacmanGridPosition,direction,mazeArray,mode){let newDirection=direction;const possibleMoves=this.determinePossibleMoves(gridPosition,direction,mazeArray);return 1===Object.keys(possibleMoves).length?[newDirection]=Object.keys(possibleMoves):Object.keys(possibleMoves).length>1&&(newDirection=this.determineBestMove(name,possibleMoves,gridPosition,pacmanGridPosition,mode)),newDirection}handleIdleMovement(elapsedMs,position,velocity){const newPosition=Object.assign({},this.position);return position.y<=13.5?this.direction=this.characterUtil.directions.down:position.y>=14.5&&(this.direction=this.characterUtil.directions.up),"leaving"===this.idleMode&&(13.5===position.x&&position.y>10.8&&position.y<11?(this.idleMode=void 0,newPosition.top=10.5*this.scaledTileSize,this.direction=this.characterUtil.directions.left,window.dispatchEvent(new Event("releaseGhost"))):position.x>13.4&&position.x<13.6?(newPosition.left=13*this.scaledTileSize,this.direction=this.characterUtil.directions.up):position.y>13.9&&position.y<14.1&&(newPosition.top=13.5*this.scaledTileSize,this.direction=position.x<13.5?this.characterUtil.directions.right:this.characterUtil.directions.left)),newPosition[this.characterUtil.getPropertyToChange(this.direction)]+=this.characterUtil.getVelocity(this.direction,velocity)*elapsedMs,newPosition}endIdleMode(){this.idleMode="leaving"}handleSnappedMovement(elapsedMs,gridPosition,velocity,pacmanGridPosition){const newPosition=Object.assign({},this.position);return this.direction=this.determineDirection(this.name,gridPosition,pacmanGridPosition,this.direction,this.mazeArray,this.mode),newPosition[this.characterUtil.getPropertyToChange(this.direction)]+=this.characterUtil.getVelocity(this.direction,velocity)*elapsedMs,newPosition}enteringGhostHouse(mode,position){return"eyes"===mode&&11===position.y&&position.x>13.4&&position.x<13.6}enteredGhostHouse(mode,position){return"eyes"===mode&&13.5===position.x&&position.y>13.8&&position.y<14.2}leavingGhostHouse(mode,position){return"eyes"!==mode&&13.5===position.x&&position.y>10.8&&position.y<11}handleGhostHouse(gridPosition){const gridPositionCopy=Object.assign({},gridPosition);return this.enteringGhostHouse(this.mode,gridPosition)&&(this.direction=this.characterUtil.directions.down,gridPositionCopy.x=13.5,this.position=this.characterUtil.snapToGrid(gridPositionCopy,this.direction,this.scaledTileSize)),this.enteredGhostHouse(this.mode,gridPosition)&&(this.direction=this.characterUtil.directions.up,gridPositionCopy.y=14,this.position=this.characterUtil.snapToGrid(gridPositionCopy,this.direction,this.scaledTileSize),this.mode=this.defaultMode,window.dispatchEvent(new Event("restoreGhost"))),this.leavingGhostHouse(this.mode,gridPosition)&&(gridPositionCopy.y=11,this.position=this.characterUtil.snapToGrid(gridPositionCopy,this.direction,this.scaledTileSize),this.direction=this.characterUtil.directions.left),gridPositionCopy}handleUnsnappedMovement(elapsedMs,gridPosition,velocity){const gridPositionCopy=this.handleGhostHouse(gridPosition),desired=this.characterUtil.determineNewPositions(this.position,this.direction,velocity,elapsedMs,this.scaledTileSize);return this.characterUtil.changingGridPosition(gridPositionCopy,desired.newGridPosition)?this.characterUtil.snapToGrid(gridPositionCopy,this.direction,this.scaledTileSize):desired.newPosition}handleMovement(elapsedMs){let newPosition;const gridPosition=this.characterUtil.determineGridPosition(this.position,this.scaledTileSize),pacmanGridPosition=this.characterUtil.determineGridPosition(this.pacman.position,this.scaledTileSize),velocity=this.determineVelocity(gridPosition,this.mode);return newPosition=this.idleMode?this.handleIdleMovement(elapsedMs,gridPosition,velocity):JSON.stringify(this.position)===JSON.stringify(this.characterUtil.snapToGrid(gridPosition,this.direction,this.scaledTileSize))?this.handleSnappedMovement(elapsedMs,gridPosition,velocity,pacmanGridPosition):this.handleUnsnappedMovement(elapsedMs,gridPosition,velocity),newPosition=this.characterUtil.handleWarp(newPosition,this.scaledTileSize,this.mazeArray),this.checkCollision(gridPosition,pacmanGridPosition),newPosition}changeMode(newMode){this.defaultMode=newMode;const gridPosition=this.characterUtil.determineGridPosition(this.position,this.scaledTileSize);"chase"!==this.mode&&"scatter"!==this.mode||this.cruiseElroy||(this.mode=newMode,this.isInGhostHouse(gridPosition)||(this.direction=this.characterUtil.getOppositeDirection(this.direction)))}toggleScaredColor(){this.scaredColor="blue"===this.scaredColor?"white":"blue",this.setSpriteSheet(this.name,this.direction,this.mode)}becomeScared(){const gridPosition=this.characterUtil.determineGridPosition(this.position,this.scaledTileSize);"eyes"!==this.mode&&(this.isInGhostHouse(gridPosition)||"scared"===this.mode||(this.direction=this.characterUtil.getOppositeDirection(this.direction)),this.mode="scared",this.scaredColor="blue",this.setSpriteSheet(this.name,this.direction,this.mode))}endScared(){this.mode=this.defaultMode,this.setSpriteSheet(this.name,this.direction,this.mode)}speedUp(){this.cruiseElroy=!0,this.defaultSpeed===this.slowSpeed?this.defaultSpeed=this.mediumSpeed:this.defaultSpeed===this.mediumSpeed&&(this.defaultSpeed=this.fastSpeed)}resetDefaultSpeed(){this.defaultSpeed=this.slowSpeed,this.cruiseElroy=!1,this.setSpriteSheet(this.name,this.direction,this.mode)}pause(newValue){this.paused=newValue}checkCollision(position,pacman){this.calculateDistance(position,pacman)<1&&"eyes"!==this.mode&&this.allowCollision&&("scared"===this.mode?(window.dispatchEvent(new CustomEvent("eatGhost",{detail:{ghost:this}})),this.mode="eyes"):window.dispatchEvent(new Event("deathSequence")))}determineVelocity(position,mode){return"eyes"===mode?this.eyeSpeed:this.paused?0:this.isInTunnel(position)||this.isInGhostHouse(position)?this.transitionSpeed:"scared"===mode?this.scaredSpeed:this.defaultSpeed}draw(interp){const newTop=this.characterUtil.calculateNewDrawValue(interp,"top",this.oldPosition,this.position),newLeft=this.characterUtil.calculateNewDrawValue(interp,"left",this.oldPosition,this.position);this.animationTarget.style.top=`${newTop}px`,this.animationTarget.style.left=`${newLeft}px`,this.animationTarget.style.visibility=this.display?this.characterUtil.checkForStutter(this.position,this.oldPosition):"hidden";const updatedProperties=this.characterUtil.advanceSpriteSheet(this);this.msSinceLastSprite=updatedProperties.msSinceLastSprite,this.animationTarget=updatedProperties.animationTarget,this.backgroundOffsetPixels=updatedProperties.backgroundOffsetPixels}update(elapsedMs){this.oldPosition=Object.assign({},this.position),this.moving&&(this.position=this.handleMovement(elapsedMs),this.setSpriteSheet(this.name,this.direction,this.mode),this.msSinceLastSprite+=elapsedMs)}}class Pacman{constructor(scaledTileSize,mazeArray,characterUtil){this.scaledTileSize=scaledTileSize,this.mazeArray=mazeArray,this.characterUtil=characterUtil,this.animationTarget=document.getElementById("pacman"),this.pacmanArrow=document.getElementById("pacman-arrow"),this.reset()}reset(){this.setMovementStats(this.scaledTileSize),this.setSpriteAnimationStats(),this.setStyleMeasurements(this.scaledTileSize,this.spriteFrames),this.setDefaultPosition(this.scaledTileSize),this.setSpriteSheet(this.direction),this.pacmanArrow.style.backgroundImage="url(app/style/graphics/"+`spriteSheets/characters/pacman/arrow_${this.direction}.svg)`}setMovementStats(scaledTileSize){this.velocityPerMs=this.calculateVelocityPerMs(scaledTileSize),this.desiredDirection=this.characterUtil.directions.left,this.direction=this.characterUtil.directions.left,this.moving=!1}setSpriteAnimationStats(){this.specialAnimation=!1,this.display=!0,this.animate=!0,this.loopAnimation=!0,this.msBetweenSprites=50,this.msSinceLastSprite=0,this.spriteFrames=4,this.backgroundOffsetPixels=0,this.animationTarget.style.backgroundPosition="0px 0px"}setStyleMeasurements(scaledTileSize,spriteFrames){this.measurement=2*scaledTileSize,this.animationTarget.style.height=`${this.measurement}px`,this.animationTarget.style.width=`${this.measurement}px`,this.animationTarget.style.backgroundSize=`${this.measurement*spriteFrames}px`,this.pacmanArrow.style.height=`${2*this.measurement}px`,this.pacmanArrow.style.width=`${2*this.measurement}px`,this.pacmanArrow.style.backgroundSize=`${2*this.measurement}px`}setDefaultPosition(scaledTileSize){this.defaultPosition={top:22.5*scaledTileSize,left:13*scaledTileSize},this.position=Object.assign({},this.defaultPosition),this.oldPosition=Object.assign({},this.position),this.animationTarget.style.top=`${this.position.top}px`,this.animationTarget.style.left=`${this.position.left}px`}calculateVelocityPerMs(scaledTileSize){const velocityPerSecond=11*scaledTileSize;return velocityPerSecond/1e3}setSpriteSheet(direction){this.animationTarget.style.backgroundImage="url(app/style/graphics/"+`spriteSheets/characters/pacman/pacman_${direction}_moretti.png)`}prepDeathAnimation(){this.loopAnimation=!1,this.msBetweenSprites=125,this.spriteFrames=12,this.specialAnimation=!0,this.backgroundOffsetPixels=0;const bgSize=this.measurement*this.spriteFrames;this.animationTarget.style.backgroundSize=`${bgSize}px`,this.animationTarget.style.backgroundImage="url(app/style/graphics/spriteSheets/characters/pacman/pacman_death_moretti.png)",this.animationTarget.style.backgroundPosition="0px 0px",this.pacmanArrow.style.backgroundImage=""}changeDirection(newDirection,startMoving){this.desiredDirection=newDirection,this.pacmanArrow.style.backgroundImage="url(app/style/graphics/"+`spriteSheets/characters/pacman/arrow_${this.desiredDirection}.svg)`,startMoving&&(this.moving=!0)}updatePacmanArrowPosition(position,scaledTileSize){this.pacmanArrow.style.top=`${position.top-scaledTileSize}px`,this.pacmanArrow.style.left=`${position.left-scaledTileSize}px`}handleSnappedMovement(elapsedMs){const desired=this.characterUtil.determineNewPositions(this.position,this.desiredDirection,this.velocityPerMs,elapsedMs,this.scaledTileSize),alternate=this.characterUtil.determineNewPositions(this.position,this.direction,this.velocityPerMs,elapsedMs,this.scaledTileSize);return this.characterUtil.checkForWallCollision(desired.newGridPosition,this.mazeArray,this.desiredDirection)?this.characterUtil.checkForWallCollision(alternate.newGridPosition,this.mazeArray,this.direction)?(this.moving=!1,this.position):alternate.newPosition:(this.direction=this.desiredDirection,this.setSpriteSheet(this.direction),desired.newPosition)}handleUnsnappedMovement(gridPosition,elapsedMs){const desired=this.characterUtil.determineNewPositions(this.position,this.desiredDirection,this.velocityPerMs,elapsedMs,this.scaledTileSize),alternate=this.characterUtil.determineNewPositions(this.position,this.direction,this.velocityPerMs,elapsedMs,this.scaledTileSize);return this.characterUtil.turningAround(this.direction,this.desiredDirection)?(this.direction=this.desiredDirection,this.setSpriteSheet(this.direction),desired.newPosition):this.characterUtil.changingGridPosition(gridPosition,alternate.newGridPosition)?this.characterUtil.snapToGrid(gridPosition,this.direction,this.scaledTileSize):alternate.newPosition}draw(interp){const newTop=this.characterUtil.calculateNewDrawValue(interp,"top",this.oldPosition,this.position),newLeft=this.characterUtil.calculateNewDrawValue(interp,"left",this.oldPosition,this.position);this.animationTarget.style.top=`${newTop}px`,this.animationTarget.style.left=`${newLeft}px`,this.animationTarget.style.visibility=this.display?this.characterUtil.checkForStutter(this.position,this.oldPosition):"hidden",this.pacmanArrow.style.visibility=this.animationTarget.style.visibility,this.updatePacmanArrowPosition(this.position,this.scaledTileSize);const updatedProperties=this.characterUtil.advanceSpriteSheet(this);this.msSinceLastSprite=updatedProperties.msSinceLastSprite,this.animationTarget=updatedProperties.animationTarget,this.backgroundOffsetPixels=updatedProperties.backgroundOffsetPixels}update(elapsedMs){if(this.oldPosition=Object.assign({},this.position),this.moving){const gridPosition=this.characterUtil.determineGridPosition(this.position,this.scaledTileSize);JSON.stringify(this.position)===JSON.stringify(this.characterUtil.snapToGrid(gridPosition,this.direction,this.scaledTileSize))?this.position=this.handleSnappedMovement(elapsedMs):this.position=this.handleUnsnappedMovement(gridPosition,elapsedMs),this.position=this.characterUtil.handleWarp(this.position,this.scaledTileSize,this.mazeArray)}(this.moving||this.specialAnimation)&&(this.msSinceLastSprite+=elapsedMs)}}class GameCoordinator{constructor(){this.gameUi=document.getElementById("game-ui"),this.rowTop=document.getElementById("row-top"),this.mazeDiv=document.getElementById("maze"),this.mazeImg=document.getElementById("maze-img"),this.mazeCover=document.getElementById("maze-cover"),this.pointsDisplay=document.getElementById("points-display"),this.highScoreDisplay=document.getElementById("high-score-display"),this.extraLivesDisplay=document.getElementById("extra-lives"),this.fruitDisplay=document.getElementById("fruit-display"),this.mainMenu=document.getElementById("main-menu-container"),this.gameStartButton=document.getElementById("game-start"),this.pauseButton=document.getElementById("pause-button"),this.soundButton=document.getElementById("sound-button"),this.leftCover=document.getElementById("left-cover"),this.rightCover=document.getElementById("right-cover"),this.pausedText=document.getElementById("paused-text"),this.bottomRow=document.getElementById("bottom-row"),this.movementButtons=document.getElementById("movement-buttons"),this.mazeArray=[["XXXXXXXXXXXXXXXXXXXXXXXXXXXX"],["XooooooooooooXXooooooooooooX"],["XoXXXXoXXXXXoXXoXXXXXoXXXXoX"],["XOXXXXoXXXXXoXXoXXXXXoXXXXOX"],["XoXXXXoXXXXXoXXoXXXXXoXXXXoX"],["XooooooooooooooooooooooooooX"],["XoXXXXoXXoXXXXXXXXoXXoXXXXoX"],["XoXXXXoXXoXXXXXXXXoXXoXXXXoX"],["XooooooXXooooXXooooXXooooooX"],["XXXXXXoXXXXX XX XXXXXoXXXXXX"],["XXXXXXoXXXXX XX XXXXXoXXXXXX"],["XXXXXXoXX          XXoXXXXXX"],["XXXXXXoXX XXXXXXXX XXoXXXXXX"],["XXXXXXoXX X      X XXoXXXXXX"],["      o   X      X   o      "],["XXXXXXoXX X      X XXoXXXXXX"],["XXXXXXoXX XXXXXXXX XXoXXXXXX"],["XXXXXXoXX          XXoXXXXXX"],["XXXXXXoXX XXXXXXXX XXoXXXXXX"],["XXXXXXoXX XXXXXXXX XXoXXXXXX"],["XooooooooooooXXooooooooooooX"],["XoXXXXoXXXXXoXXoXXXXXoXXXXoX"],["XoXXXXoXXXXXoXXoXXXXXoXXXXoX"],["XOooXXooooooo  oooooooXXooOX"],["XXXoXXoXXoXXXXXXXXoXXoXXoXXX"],["XXXoXXoXXoXXXXXXXXoXXoXXoXXX"],["XooooooXXooooXXooooXXooooooX"],["XoXXXXXXXXXXoXXoXXXXXXXXXXoX"],["XoXXXXXXXXXXoXXoXXXXXXXXXXoX"],["XooooooooooooooooooooooooooX"],["XXXXXXXXXXXXXXXXXXXXXXXXXXXX"]],this.maxFps=120,this.tileSize=8,this.scale=this.determineScale(1),this.scaledTileSize=this.tileSize*this.scale,this.firstGame=!0,this.movementKeys={87:"up",83:"down",65:"left",68:"right",38:"up",40:"down",37:"left",39:"right"},this.fruitPoints={1:100,2:300,3:500,4:700,5:1e3,6:2e3,7:3e3,8:5e3},this.mazeArray.forEach((row,rowIndex)=>{this.mazeArray[rowIndex]=row[0].split("")}),this.gameStartButton.addEventListener("click",this.startButtonClick.bind(this)),this.pauseButton.addEventListener("click",this.handlePauseKey.bind(this)),this.soundButton.addEventListener("click",this.soundButtonClick.bind(this));const head=document.getElementsByTagName("head")[0],link=document.createElement("link");link.rel="stylesheet",link.href="build/app.css",link.onload=this.preloadAssets.bind(this),head.appendChild(link)}determineScale(scale){const availableScreenHeight=Math.min(document.documentElement.clientHeight,window.innerHeight||0),availableScreenWidth=Math.min(document.documentElement.clientWidth,window.innerWidth||0),scaledTileSize=this.tileSize*scale,mazeTileHeight=this.mazeArray.length+5,mazeTileWidth=this.mazeArray[0][0].split("").length;return scaledTileSize*mazeTileHeight<availableScreenHeight&&scaledTileSize*mazeTileWidth<availableScreenWidth?this.determineScale(scale+1):scale-1}startButtonClick(){this.leftCover.style.left="-50%",this.rightCover.style.right="-50%",this.mainMenu.style.opacity=0,this.gameStartButton.disabled=!0,setTimeout(()=>{this.mainMenu.style.visibility="hidden"},1e3),this.reset(),this.firstGame&&(this.firstGame=!1,this.init()),this.startGameplay(!0)}soundButtonClick(){const newVolume=1===this.soundManager.masterVolume?0:1;this.soundManager.setMasterVolume(newVolume),localStorage.setItem("volumePreference",newVolume),this.setSoundButtonIcon(newVolume)}setSoundButtonIcon(newVolume){this.soundButton.innerHTML=0===newVolume?"volume_off":"volume_up"}displayErrorMessage(){const loadingContainer=document.getElementById("loading-container"),errorMessage=document.getElementById("error-message");loadingContainer.style.opacity=0,setTimeout(()=>{loadingContainer.remove(),errorMessage.style.opacity=1,errorMessage.style.visibility="visible"},1500)}preloadAssets(){return new Promise(resolve=>{const loadingContainer=document.getElementById("loading-container"),loadingPacman=document.getElementById("loading-pacman"),loadingDotMask=document.getElementById("loading-dot-mask"),imgBase="app/style/graphics/spriteSheets/",imgSources=[`${imgBase}characters/pacman/arrow_down.svg`,`${imgBase}characters/pacman/arrow_left.svg`,`${imgBase}characters/pacman/arrow_right.svg`,`${imgBase}characters/pacman/arrow_up.svg`,`${imgBase}characters/pacman/pacman_death_moretti.png`,`${imgBase}characters/pacman/pacman_error.svg`,`${imgBase}characters/pacman/pacman_down.svg`,`${imgBase}characters/pacman/pacman_left.svg`,`${imgBase}characters/pacman/pacman_right.svg`,`${imgBase}characters/pacman/pacman_up_moretti.png`,`${imgBase}characters/ghosts/branded/blinky/blinky_down_angry.png`,`${imgBase}characters/ghosts/branded/blinky/blinky_down_annoyed.png`,`${imgBase}characters/ghosts/branded/blinky/blinky_down.png`,`${imgBase}characters/ghosts/branded/blinky/blinky_left_angry.png`,`${imgBase}characters/ghosts/branded/blinky/blinky_left_annoyed.png`,`${imgBase}characters/ghosts/branded/blinky/blinky_left.png`,`${imgBase}characters/ghosts/branded/blinky/blinky_right_angry.png`,`${imgBase}characters/ghosts/branded/blinky/blinky_right_annoyed.png`,`${imgBase}characters/ghosts/branded/blinky/blinky_right.png`,`${imgBase}characters/ghosts/branded/blinky/blinky_up_angry.png`,`${imgBase}characters/ghosts/branded/blinky/blinky_up_annoyed.png`,`${imgBase}characters/ghosts/branded/blinky/blinky_up.png`,`${imgBase}characters/ghosts/branded/clyde/clyde_down.png`,`${imgBase}characters/ghosts/branded/clyde/clyde_left.png`,`${imgBase}characters/ghosts/branded/clyde/clyde_right.png`,`${imgBase}characters/ghosts/branded/clyde/clyde_up.png`,`${imgBase}characters/ghosts/branded/inky/inky_down.png`,`${imgBase}characters/ghosts/branded/inky/inky_left.png`,`${imgBase}characters/ghosts/branded/inky/inky_right.png`,`${imgBase}characters/ghosts/branded/inky/inky_up.png`,`${imgBase}characters/ghosts/branded/pinky/pinky_down.png`,`${imgBase}characters/ghosts/branded/pinky/pinky_left.png`,`${imgBase}characters/ghosts/branded/pinky/pinky_right.png`,`${imgBase}characters/ghosts/branded/pinky/pinky_up.png`,`${imgBase}characters/ghosts/branded/eyes_down.svg`,`${imgBase}characters/ghosts/branded/eyes_left.svg`,`${imgBase}characters/ghosts/branded/eyes_right.svg`,`${imgBase}characters/ghosts/branded/eyes_up.svg`,`${imgBase}characters/ghosts/branded/scared_blue.svg`,`${imgBase}characters/ghosts/branded/scared_white.svg`,`${imgBase}pickups/pacdot.svg`,`${imgBase}pickups/powerPellet.svg`,`${imgBase}pickups/apple.svg`,`${imgBase}pickups/bell.svg`,`${imgBase}pickups/cherry.svg`,`${imgBase}pickups/galaxian.svg`,`${imgBase}pickups/key.svg`,`${imgBase}pickups/melon.svg`,`${imgBase}pickups/orange.svg`,`${imgBase}pickups/strawberry.svg`,`${imgBase}text/ready.svg`,`${imgBase}text/100.svg`,`${imgBase}text/200.svg`,`${imgBase}text/300.svg`,`${imgBase}text/400.svg`,`${imgBase}text/500.svg`,`${imgBase}text/700.svg`,`${imgBase}text/800.svg`,`${imgBase}text/1000.svg`,`${imgBase}text/1600.svg`,`${imgBase}text/2000.svg`,`${imgBase}text/3000.svg`,`${imgBase}text/5000.svg`,`${imgBase}maze/maze_blue.svg`,"app/style/graphics/extra_life_moretti.png"],audioBase="app/style/audio/",audioSources=[`${audioBase}game_start.mp3`,`${audioBase}pause.mp3`,`${audioBase}pause_beat.mp3`,`${audioBase}siren_1.mp3`,`${audioBase}siren_2.mp3`,`${audioBase}siren_3.mp3`,`${audioBase}power_up.mp3`,`${audioBase}extra_life.mp3`,`${audioBase}eyes.mp3`,`${audioBase}eat_ghost.mp3`,`${audioBase}death.mp3`,`${audioBase}fruit.mp3`,`${audioBase}dot_1.mp3`,`${audioBase}dot_2.mp3`],totalSources=imgSources.length+audioSources.length;this.remainingSources=totalSources,loadingPacman.style.left="0",loadingDotMask.style.width="0",Promise.all([this.createElements(imgSources,"img",totalSources,this),this.createElements(audioSources,"audio",totalSources,this)]).then(()=>{loadingContainer.style.opacity=0,resolve(),setTimeout(()=>{loadingContainer.remove(),this.mainMenu.style.opacity=1,this.mainMenu.style.visibility="visible",setTimeout(()=>{document.getElementById("game-start").click()},2e3)},1500)}).catch(this.displayErrorMessage)})}createElements(sources,type,totalSources,gameCoord){const loadingContainer=document.getElementById("loading-container"),preloadDiv=document.getElementById("preload-div"),loadingPacman=document.getElementById("loading-pacman"),containerWidth=loadingContainer.scrollWidth-loadingPacman.scrollWidth,loadingDotMask=document.getElementById("loading-dot-mask"),gameCoordRef=gameCoord;return new Promise((resolve,reject)=>{let loadedSources=0;sources.forEach(source=>{const element="img"===type?new Image:new Audio;preloadDiv.appendChild(element);const elementReady=()=>{gameCoordRef.remainingSources-=1,loadedSources+=1;const percent=1-gameCoordRef.remainingSources/totalSources;loadingPacman.style.left=`${percent*containerWidth}px`,loadingDotMask.style.width=loadingPacman.style.left,loadedSources===sources.length&&resolve()};"img"===type?(element.onload=elementReady,element.onerror=reject):(element.addEventListener("canplaythrough",elementReady),element.onerror=reject),element.src=source,"audio"===type&&element.load()})})}reset(){this.activeTimers=[],this.points=0,this.level=1,this.lives=2,this.extraLifeGiven=!1,this.remainingDots=0,this.allowKeyPresses=!0,this.allowPacmanMovement=!1,this.allowPause=!1,this.cutscene=!0,this.highScore=localStorage.getItem("highScore"),this.firstGame&&(setInterval(()=>{this.collisionDetectionLoop()},500),this.pacman=new Pacman(this.scaledTileSize,this.mazeArray,new CharacterUtil),this.blinky=new Ghost(this.scaledTileSize,this.mazeArray,this.pacman,"blinky",this.level,new CharacterUtil),this.pinky=new Ghost(this.scaledTileSize,this.mazeArray,this.pacman,"pinky",this.level,new CharacterUtil),this.inky=new Ghost(this.scaledTileSize,this.mazeArray,this.pacman,"inky",this.level,new CharacterUtil,this.blinky),this.clyde=new Ghost(this.scaledTileSize,this.mazeArray,this.pacman,"clyde",this.level,new CharacterUtil),this.fruit=new Pickup("fruit",this.scaledTileSize,13.5,17,this.pacman,this.mazeDiv,100)),this.entityList=[this.pacman,this.blinky,this.pinky,this.inky,this.clyde,this.fruit],this.ghosts=[this.blinky,this.pinky,this.inky,this.clyde],this.scaredGhosts=[],this.eyeGhosts=0,this.firstGame?(this.drawMaze(this.mazeArray,this.entityList),this.soundManager=new SoundManager,this.setUiDimensions()):(this.pacman.reset(),this.ghosts.forEach(ghost=>{ghost.reset(!0)}),this.pickups.forEach(pickup=>{"fruit"!==pickup.type&&(this.remainingDots+=1,pickup.reset(),this.entityList.push(pickup))})),this.pointsDisplay.innerHTML="00€",this.highScoreDisplay.innerHTML=(this.highScore||"00")+"€",this.clearDisplay(this.fruitDisplay);const volumePreference=parseInt(localStorage.getItem("volumePreference")||1,10);this.setSoundButtonIcon(volumePreference),this.soundManager.setMasterVolume(volumePreference)}init(){this.registerEventListeners(),this.gameEngine=new GameEngine(this.maxFps,this.entityList),this.gameEngine.start()}drawMaze(mazeArray,entityList){this.pickups=[this.fruit],this.mazeDiv.style.height=`${31*this.scaledTileSize}px`,this.mazeDiv.style.width=`${28*this.scaledTileSize}px`,this.gameUi.style.width=`${28*this.scaledTileSize}px`,this.bottomRow.style.minHeight=`${2*this.scaledTileSize}px`,this.dotContainer=document.getElementById("dot-container"),mazeArray.forEach((row,rowIndex)=>{row.forEach((block,columnIndex)=>{if("o"===block||"O"===block){const type="o"===block?"pacdot":"powerPellet",points="o"===block?10:50,dot=new Pickup(type,this.scaledTileSize,columnIndex,rowIndex,this.pacman,this.dotContainer,points);entityList.push(dot),this.pickups.push(dot),this.remainingDots+=1}})})}setUiDimensions(){this.gameUi.style.fontSize=`${this.scaledTileSize}px`,this.rowTop.style.marginBottom=`${this.scaledTileSize}px`}collisionDetectionLoop(){if(this.pacman.position){const maxDistance=750*this.pacman.velocityPerMs,pacmanCenter={x:this.pacman.position.left+this.scaledTileSize,y:this.pacman.position.top+this.scaledTileSize},debugging=!1;this.pickups.forEach(pickup=>{pickup.checkPacmanProximity(maxDistance,pacmanCenter,debugging)})}}startGameplay(initialStart){initialStart&&this.soundManager.play("game_start"),this.scaredGhosts=[],this.eyeGhosts=0,this.allowPacmanMovement=!1;const left=11*this.scaledTileSize,top=16.5*this.scaledTileSize,duration=initialStart?4500:2e3,width=6*this.scaledTileSize,height=2*this.scaledTileSize;this.displayText({left:left,top:top},"ready",duration,width,height),this.updateExtraLivesDisplay(),new Timer(()=>{this.allowPause=!0,this.cutscene=!1,this.soundManager.setCutscene(this.cutscene),this.soundManager.setAmbience(this.determineSiren(this.remainingDots)),this.allowPacmanMovement=!0,this.pacman.moving=!0,this.ghosts.forEach(ghost=>{const ghostRef=ghost;ghostRef.moving=!0}),this.ghostCycle("scatter"),this.idleGhosts=[this.pinky,this.inky,this.clyde],this.releaseGhost()},duration)}clearDisplay(display){for(;display.firstChild;)display.removeChild(display.firstChild)}updateExtraLivesDisplay(){this.clearDisplay(this.extraLivesDisplay);for(let i=0;i<this.lives;i+=1){const extraLifePic=document.createElement("img");extraLifePic.setAttribute("src","app/style/graphics/extra_life_moretti.png"),extraLifePic.style.height=`${2*this.scaledTileSize}px`,this.extraLivesDisplay.appendChild(extraLifePic)}}updateFruitDisplay(rawImageSource){const parsedSource=rawImageSource.slice(rawImageSource.indexOf("(")+1,rawImageSource.indexOf(")"));7===this.fruitDisplay.children.length&&this.fruitDisplay.removeChild(this.fruitDisplay.firstChild);const fruitPic=document.createElement("img");fruitPic.setAttribute("src",parsedSource),fruitPic.style.height=`${2*this.scaledTileSize}px`,this.fruitDisplay.appendChild(fruitPic)}ghostCycle(mode){const delay="scatter"===mode?7e3:2e4,nextMode="scatter"===mode?"chase":"scatter";this.ghostCycleTimer=new Timer(()=>{this.ghosts.forEach(ghost=>{ghost.changeMode(nextMode)}),this.ghostCycle(nextMode)},delay)}releaseGhost(){if(this.idleGhosts.length>0){const delay=Math.max(1e3*(8-4*(this.level-1)),0);this.endIdleTimer=new Timer(()=>{this.idleGhosts[0].endIdleMode(),this.idleGhosts.shift()},delay)}}registerEventListeners(){window.addEventListener("keydown",this.handleKeyDown.bind(this)),window.addEventListener("awardPoints",this.awardPoints.bind(this)),window.addEventListener("deathSequence",this.deathSequence.bind(this)),window.addEventListener("dotEaten",this.dotEaten.bind(this)),window.addEventListener("powerUp",this.powerUp.bind(this)),window.addEventListener("eatGhost",this.eatGhost.bind(this)),window.addEventListener("restoreGhost",this.restoreGhost.bind(this)),window.addEventListener("addTimer",this.addTimer.bind(this)),window.addEventListener("removeTimer",this.removeTimer.bind(this)),window.addEventListener("releaseGhost",this.releaseGhost.bind(this));const directions=["up","down","left","right"];directions.forEach(direction=>{document.getElementById(`button-${direction}`).addEventListener("touchstart",()=>{this.changeDirection(direction)})})}changeDirection(direction){this.allowKeyPresses&&this.gameEngine.running&&this.pacman.changeDirection(direction,this.allowPacmanMovement)}handleKeyDown(e){27===e.keyCode?this.handlePauseKey():81===e.keyCode?this.soundButtonClick():this.movementKeys[e.keyCode]&&this.changeDirection(this.movementKeys[e.keyCode])}handlePauseKey(){this.allowPause&&(this.allowPause=!1,setTimeout(()=>{this.cutscene||(this.allowPause=!0)},500),this.gameEngine.changePausedState(this.gameEngine.running),this.soundManager.play("pause"),this.gameEngine.started?(this.soundManager.resumeAmbience(),this.gameUi.style.filter="unset",this.movementButtons.style.filter="unset",this.pausedText.style.visibility="hidden",this.pauseButton.innerHTML="pause",this.activeTimers.forEach(timer=>{timer.resume()})):(this.soundManager.stopAmbience(),this.soundManager.setAmbience("pause_beat",!0),this.gameUi.style.filter="blur(5px)",this.movementButtons.style.filter="blur(5px)",this.pausedText.style.visibility="visible",this.pauseButton.innerHTML="play_arrow",this.activeTimers.forEach(timer=>{timer.pause()})))}awardPoints(e){if(this.points+=e.detail.points,this.pointsDisplay.innerText=this.points+"€",this.points>(this.highScore||0)&&(this.highScore=this.points,this.highScoreDisplay.innerText=this.points+"€",localStorage.setItem("highScore",this.highScore)),this.points>=1e4&&!this.extraLifeGiven&&(this.extraLifeGiven=!0,this.soundManager.play("extra_life"),this.lives+=1,this.updateExtraLivesDisplay()),"fruit"===e.detail.type){const left=e.detail.points>=1e3?12.5*this.scaledTileSize:13*this.scaledTileSize,top=16.5*this.scaledTileSize,width=e.detail.points>=1e3?3*this.scaledTileSize:2*this.scaledTileSize,height=2*this.scaledTileSize;this.displayText({left:left,top:top},e.detail.points,2e3,width,height),this.soundManager.play("fruit"),this.updateFruitDisplay(this.fruit.determineImage("fruit",e.detail.points))}}deathSequence(){this.allowPause=!1,this.cutscene=!0,this.soundManager.setCutscene(this.cutscene),this.soundManager.stopAmbience(),this.removeTimer({detail:{timer:this.fruitTimer}}),this.removeTimer({detail:{timer:this.ghostCycleTimer}}),this.removeTimer({detail:{timer:this.endIdleTimer}}),this.removeTimer({detail:{timer:this.ghostFlashTimer}}),this.allowKeyPresses=!1,this.pacman.moving=!1,this.ghosts.forEach(ghost=>{const ghostRef=ghost;ghostRef.moving=!1}),new Timer(()=>{this.ghosts.forEach(ghost=>{const ghostRef=ghost;ghostRef.display=!1}),this.pacman.prepDeathAnimation(),this.soundManager.play("death"),this.lives>0?(this.lives-=1,new Timer(()=>{this.mazeCover.style.visibility="visible",new Timer(()=>{this.allowKeyPresses=!0,this.mazeCover.style.visibility="hidden",this.pacman.reset(),this.ghosts.forEach(ghost=>{ghost.reset()}),this.fruit.hideFruit(),this.startGameplay()},500)},2250)):this.gameOver()},750)}gameOver(){localStorage.setItem("highScore",this.highScore),new Timer(()=>{this.displayText({left:9*this.scaledTileSize,top:16.5*this.scaledTileSize},"game_over",4e3,10*this.scaledTileSize,2*this.scaledTileSize),this.fruit.hideFruit(),new Timer(()=>{this.leftCover.style.left="0",this.rightCover.style.right="0",setTimeout(()=>{this.mainMenu.style.opacity=1,this.gameStartButton.disabled=!1,this.mainMenu.style.visibility="visible",setTimeout(()=>{document.getElementById("game-start").click()},2e3)},1e3)},2500)},2250)}dotEaten(){this.remainingDots-=1,this.soundManager.playDotSound(),174!==this.remainingDots&&74!==this.remainingDots||this.createFruit(),40!==this.remainingDots&&20!==this.remainingDots||this.speedUpBlinky(),0===this.remainingDots&&this.advanceLevel()}createFruit(){this.removeTimer({detail:{timer:this.fruitTimer}}),this.fruit.showFruit(this.fruitPoints[this.level]||5e3),this.fruitTimer=new Timer(()=>{this.fruit.hideFruit()},1e4)}speedUpBlinky(){this.blinky.speedUp(),0===this.scaredGhosts.length&&0===this.eyeGhosts&&this.soundManager.setAmbience(this.determineSiren(this.remainingDots))}determineSiren(remainingDots){let sirenNum;return sirenNum=remainingDots>40?1:remainingDots>20?2:3,`siren_${sirenNum}`}advanceLevel(){this.allowPause=!1,this.cutscene=!0,this.soundManager.setCutscene(this.cutscene),this.allowKeyPresses=!1,this.soundManager.stopAmbience(),this.entityList.forEach(entity=>{const entityRef=entity;entityRef.moving=!1}),this.removeTimer({detail:{timer:this.fruitTimer}}),this.removeTimer({detail:{timer:this.ghostCycleTimer}}),this.removeTimer({detail:{timer:this.endIdleTimer}}),this.removeTimer({detail:{timer:this.ghostFlashTimer}});const imgBase="app/style//graphics/spriteSheets/maze/";new Timer(()=>{this.ghosts.forEach(ghost=>{const ghostRef=ghost;ghostRef.display=!1}),this.mazeImg.src=`${imgBase}maze_white.svg`,new Timer(()=>{this.mazeImg.src=`${imgBase}maze_blue.svg`,new Timer(()=>{this.mazeImg.src=`${imgBase}maze_white.svg`,new Timer(()=>{this.mazeImg.src=`${imgBase}maze_blue.svg`,new Timer(()=>{this.mazeImg.src=`${imgBase}maze_white.svg`,new Timer(()=>{this.mazeImg.src=`${imgBase}maze_blue.svg`,new Timer(()=>{this.mazeCover.style.visibility="visible",new Timer(()=>{this.mazeCover.style.visibility="hidden",this.level+=1,this.allowKeyPresses=!0,this.entityList.forEach(entity=>{const entityRef=entity;entityRef.level&&(entityRef.level=this.level),entityRef.reset(),entityRef instanceof Ghost&&entityRef.resetDefaultSpeed(),entityRef instanceof Pickup&&"fruit"!==entityRef.type&&(this.remainingDots+=1)}),this.startGameplay()},500)},250)},250)},250)},250)},250)},250)},2e3)}flashGhosts(flashes,maxFlashes){flashes===maxFlashes?(this.scaredGhosts.forEach(ghost=>{ghost.endScared()}),this.scaredGhosts=[],0===this.eyeGhosts&&this.soundManager.setAmbience(this.determineSiren(this.remainingDots))):this.scaredGhosts.length>0&&(this.scaredGhosts.forEach(ghost=>{ghost.toggleScaredColor()}),this.ghostFlashTimer=new Timer(()=>{this.flashGhosts(flashes+1,maxFlashes)},250))}powerUp(){0!==this.remainingDots&&this.soundManager.setAmbience("power_up"),this.removeTimer({detail:{timer:this.ghostFlashTimer}}),this.ghostCombo=0,this.scaredGhosts=[],this.ghosts.forEach(ghost=>{"eyes"!==ghost.mode&&this.scaredGhosts.push(ghost)}),this.scaredGhosts.forEach(ghost=>{ghost.becomeScared()});const powerDuration=Math.max(1e3*(7-this.level),0);this.ghostFlashTimer=new Timer(()=>{this.flashGhosts(0,9)},powerDuration)}determineComboPoints(){return 100*2**this.ghostCombo}eatGhost(e){const pauseDuration=1e3,{position:position,measurement:measurement}=e.detail.ghost;this.pauseTimer({detail:{timer:this.ghostFlashTimer}}),this.pauseTimer({detail:{timer:this.ghostCycleTimer}}),this.pauseTimer({detail:{timer:this.fruitTimer}}),this.soundManager.play("eat_ghost"),this.scaredGhosts=this.scaredGhosts.filter(ghost=>ghost.name!==e.detail.ghost.name),this.eyeGhosts+=1,this.ghostCombo+=1;const comboPoints=this.determineComboPoints();window.dispatchEvent(new CustomEvent("awardPoints",{detail:{points:comboPoints}})),this.displayText(position,comboPoints,1e3,measurement),this.allowPacmanMovement=!1,this.pacman.display=!1,this.pacman.moving=!1,e.detail.ghost.display=!1,e.detail.ghost.moving=!1,this.ghosts.forEach(ghost=>{const ghostRef=ghost;ghostRef.animate=!1,ghostRef.pause(!0),ghostRef.allowCollision=!1}),new Timer(()=>{this.soundManager.setAmbience("eyes"),this.resumeTimer({detail:{timer:this.ghostFlashTimer}}),this.resumeTimer({detail:{timer:this.ghostCycleTimer}}),this.resumeTimer({detail:{timer:this.fruitTimer}}),this.allowPacmanMovement=!0,this.pacman.display=!0,this.pacman.moving=!0,e.detail.ghost.display=!0,e.detail.ghost.moving=!0,this.ghosts.forEach(ghost=>{const ghostRef=ghost;ghostRef.animate=!0,ghostRef.pause(!1),ghostRef.allowCollision=!0})},1e3)}restoreGhost(){if(this.eyeGhosts-=1,0===this.eyeGhosts){const sound=this.scaredGhosts.length>0?"power_up":this.determineSiren(this.remainingDots);this.soundManager.setAmbience(sound)}}displayText(position,amount,duration,width,height){const pointsDiv=document.createElement("div");pointsDiv.style.position="absolute",pointsDiv.style.backgroundSize=`${width}px`,pointsDiv.style.backgroundImage="url(app/style/graphics/"+`spriteSheets/text/${amount}.svg`,pointsDiv.style.width=`${width}px`,pointsDiv.style.height=`${height||width}px`,pointsDiv.style.top=`${position.top}px`,pointsDiv.style.left=`${position.left}px`,pointsDiv.style.zIndex=2,this.mazeDiv.appendChild(pointsDiv),new Timer(()=>{this.mazeDiv.removeChild(pointsDiv)},duration)}addTimer(e){this.activeTimers.push(e.detail.timer)}timerExists(e){return!!(e.detail.timer||{}).timerId}pauseTimer(e){this.timerExists(e)&&e.detail.timer.pause(!0)}resumeTimer(e){this.timerExists(e)&&e.detail.timer.resume(!0)}removeTimer(e){this.timerExists(e)&&(window.clearTimeout(e.detail.timer.timerId),this.activeTimers=this.activeTimers.filter(timer=>timer.timerId!==e.detail.timer.timerId))}}class GameEngine{constructor(maxFps,entityList){this.fpsDisplay=document.getElementById("fps-display"),this.elapsedMs=0,this.lastFrameTimeMs=0,this.entityList=entityList,this.maxFps=maxFps,this.timestep=1e3/this.maxFps,this.fps=this.maxFps,this.framesThisSecond=0,this.lastFpsUpdate=0,this.frameId=0,this.running=!1,this.started=!1}changePausedState(running){running?this.stop():this.start()}updateFpsDisplay(timestamp){timestamp>this.lastFpsUpdate+1e3&&(this.fps=(this.framesThisSecond+this.fps)/2,this.lastFpsUpdate=timestamp,this.framesThisSecond=0),this.framesThisSecond+=1,this.fpsDisplay.textContent=`${Math.round(this.fps)} FPS`}draw(interp,entityList){entityList.forEach(entity=>{"function"==typeof entity.draw&&entity.draw(interp)})}update(elapsedMs,entityList){entityList.forEach(entity=>{"function"==typeof entity.update&&entity.update(elapsedMs)})}panic(){this.elapsedMs=0}start(){this.started||(this.started=!0,this.frameId=requestAnimationFrame(firstTimestamp=>{this.draw(1,[]),this.running=!0,this.lastFrameTimeMs=firstTimestamp,this.lastFpsUpdate=firstTimestamp,this.framesThisSecond=0,this.frameId=requestAnimationFrame(timestamp=>{this.mainLoop(timestamp)})}))}stop(){this.running=!1,this.started=!1,cancelAnimationFrame(this.frameId)}processFrames(){let numUpdateSteps=0;for(;this.elapsedMs>=this.timestep;)if(this.update(this.timestep,this.entityList),this.elapsedMs-=this.timestep,numUpdateSteps+=1,numUpdateSteps>=this.maxFps){this.panic();break}}engineCycle(timestamp){timestamp<this.lastFrameTimeMs+1e3/this.maxFps?this.frameId=requestAnimationFrame(nextTimestamp=>{this.mainLoop(nextTimestamp)}):(this.elapsedMs+=timestamp-this.lastFrameTimeMs,this.lastFrameTimeMs=timestamp,this.updateFpsDisplay(timestamp),this.processFrames(),this.draw(this.elapsedMs/this.timestep,this.entityList),this.frameId=requestAnimationFrame(nextTimestamp=>{this.mainLoop(nextTimestamp)}))}mainLoop(timestamp){this.engineCycle(timestamp)}}class Pickup{constructor(type,scaledTileSize,column,row,pacman,mazeDiv,points){this.type=type,this.pacman=pacman,this.mazeDiv=mazeDiv,this.points=points,this.nearPacman=!1,this.fruitImages={100:"cherry",300:"strawberry",500:"orange",700:"apple",1e3:"melon",2e3:"galaxian",3e3:"bell",5e3:"key"},this.setStyleMeasurements(type,scaledTileSize,column,row,points)}reset(){this.animationTarget.style.visibility="fruit"===this.type?"hidden":"visible"}setStyleMeasurements(type,scaledTileSize,column,row,points){"pacdot"===type?(this.size=.25*scaledTileSize,this.x=column*scaledTileSize+scaledTileSize/8*3,this.y=row*scaledTileSize+scaledTileSize/8*3):"powerPellet"===type?(this.size=scaledTileSize,this.x=column*scaledTileSize,this.y=row*scaledTileSize):(this.size=2*scaledTileSize,this.x=column*scaledTileSize-.5*scaledTileSize,this.y=row*scaledTileSize-.5*scaledTileSize),this.center={x:column*scaledTileSize,y:row*scaledTileSize},this.animationTarget=document.createElement("div"),this.animationTarget.style.position="absolute",this.animationTarget.style.backgroundSize=`${this.size}px`,this.animationTarget.style.backgroundImage=this.determineImage(type,points),this.animationTarget.style.height=`${this.size}px`,this.animationTarget.style.width=`${this.size}px`,this.animationTarget.style.top=`${this.y}px`,this.animationTarget.style.left=`${this.x}px`,this.mazeDiv.appendChild(this.animationTarget),"powerPellet"===type&&this.animationTarget.classList.add("power-pellet"),this.reset()}determineImage(type,points){let image="";return image="fruit"===type?this.fruitImages[points]||"cherry":type,`url(app/style/graphics/spriteSheets/pickups/${image}.svg)`}showFruit(points){this.points=points,this.animationTarget.style.backgroundImage=this.determineImage(this.type,points),this.animationTarget.style.visibility="visible"}hideFruit(){this.animationTarget.style.visibility="hidden"}checkForCollision(pickup,originalPacman){const pacman=Object.assign({},originalPacman);return pacman.x+=.25*pacman.size,pacman.y+=.25*pacman.size,pacman.size/=2,pickup.x<pacman.x+pacman.size&&pickup.x+pickup.size>pacman.x&&pickup.y<pacman.y+pacman.size&&pickup.y+pickup.size>pacman.y}checkPacmanProximity(maxDistance,pacmanCenter,debugging){if("hidden"!==this.animationTarget.style.visibility){const distance=Math.sqrt((this.center.x-pacmanCenter.x)**2+(this.center.y-pacmanCenter.y)**2);this.nearPacman=distance<=maxDistance,debugging&&(this.animationTarget.style.background=this.nearPacman?"lime":"red")}}shouldCheckForCollision(){return"hidden"!==this.animationTarget.style.visibility&&this.nearPacman}update(){this.shouldCheckForCollision()&&this.checkForCollision({x:this.x,y:this.y,size:this.size},{x:this.pacman.position.left,y:this.pacman.position.top,size:this.pacman.measurement})&&(this.animationTarget.style.visibility="hidden",window.dispatchEvent(new CustomEvent("awardPoints",{detail:{points:this.points,type:this.type}})),"pacdot"===this.type?window.dispatchEvent(new Event("dotEaten")):"powerPellet"===this.type&&(window.dispatchEvent(new Event("dotEaten")),window.dispatchEvent(new Event("powerUp"))))}}class CharacterUtil{constructor(){this.directions={up:"up",down:"down",left:"left",right:"right"}}checkForStutter(position,oldPosition){let stutter=!1;const threshold=5;return position&&oldPosition&&(Math.abs(position.top-oldPosition.top)>5||Math.abs(position.left-oldPosition.left)>5)&&(stutter=!0),stutter?"hidden":"visible"}getPropertyToChange(direction){switch(direction){case this.directions.up:case this.directions.down:return"top";default:return"left"}}getVelocity(direction,velocityPerMs){switch(direction){case this.directions.up:case this.directions.left:return-1*velocityPerMs;default:return velocityPerMs}}calculateNewDrawValue(interp,prop,oldPosition,position){return oldPosition[prop]+(position[prop]-oldPosition[prop])*interp}determineGridPosition(position,scaledTileSize){return{x:position.left/scaledTileSize+.5,y:position.top/scaledTileSize+.5}}turningAround(direction,desiredDirection){return desiredDirection===this.getOppositeDirection(direction)}getOppositeDirection(direction){switch(direction){case this.directions.up:return this.directions.down;case this.directions.down:return this.directions.up;case this.directions.left:return this.directions.right;default:return this.directions.left}}determineRoundingFunction(direction){switch(direction){case this.directions.up:case this.directions.left:return Math.floor;default:return Math.ceil}}changingGridPosition(oldPosition,position){return Math.floor(oldPosition.x)!==Math.floor(position.x)||Math.floor(oldPosition.y)!==Math.floor(position.y)}checkForWallCollision(desiredNewGridPosition,mazeArray,direction){const roundingFunction=this.determineRoundingFunction(direction,this.directions),desiredX=roundingFunction(desiredNewGridPosition.x),desiredY=roundingFunction(desiredNewGridPosition.y);let newGridValue;return Array.isArray(mazeArray[desiredY])&&(newGridValue=mazeArray[desiredY][desiredX]),"X"===newGridValue}determineNewPositions(position,direction,velocityPerMs,elapsedMs,scaledTileSize){const newPosition=Object.assign({},position);newPosition[this.getPropertyToChange(direction)]+=this.getVelocity(direction,velocityPerMs)*elapsedMs;const newGridPosition=this.determineGridPosition(newPosition,scaledTileSize);return{newPosition:newPosition,newGridPosition:newGridPosition}}snapToGrid(position,direction,scaledTileSize){const newPosition=Object.assign({},position),roundingFunction=this.determineRoundingFunction(direction,this.directions);switch(direction){case this.directions.up:case this.directions.down:newPosition.y=roundingFunction(newPosition.y);break;default:newPosition.x=roundingFunction(newPosition.x)}return{top:(newPosition.y-.5)*scaledTileSize,left:(newPosition.x-.5)*scaledTileSize}}handleWarp(position,scaledTileSize,mazeArray){const newPosition=Object.assign({},position),gridPosition=this.determineGridPosition(position,scaledTileSize);return gridPosition.x<-.75?newPosition.left=scaledTileSize*(mazeArray[0].length-.75):gridPosition.x>mazeArray[0].length-.25&&(newPosition.left=-1.25*scaledTileSize),newPosition}advanceSpriteSheet(character){const{msSinceLastSprite:msSinceLastSprite,animationTarget:animationTarget,backgroundOffsetPixels:backgroundOffsetPixels}=character,updatedProperties={msSinceLastSprite:msSinceLastSprite,animationTarget:animationTarget,backgroundOffsetPixels:backgroundOffsetPixels},ready=character.msSinceLastSprite>character.msBetweenSprites&&character.animate;if(ready){updatedProperties.msSinceLastSprite=0,character.backgroundOffsetPixels<character.measurement*(character.spriteFrames-1)?updatedProperties.backgroundOffsetPixels+=character.measurement:character.loopAnimation&&(updatedProperties.backgroundOffsetPixels=0);const style=`-${updatedProperties.backgroundOffsetPixels}px 0px`;updatedProperties.animationTarget.style.backgroundPosition=style}return updatedProperties}}class SoundManager{constructor(){this.baseUrl="app/style/audio/",this.fileFormat="mp3",this.masterVolume=1,this.paused=!1,this.cutscene=!0;const AudioContext=window.AudioContext||window.webkitAudioContext;this.ambience=new AudioContext}setCutscene(newValue){this.cutscene=newValue}setMasterVolume(newVolume){this.masterVolume=newVolume,this.soundEffect&&(this.soundEffect.volume=this.masterVolume),this.dotPlayer&&(this.dotPlayer.volume=this.masterVolume),0===this.masterVolume?this.stopAmbience():this.resumeAmbience(this.paused)}play(sound){this.soundEffect=new Audio(`${this.baseUrl}${sound}.${this.fileFormat}`),this.soundEffect.volume=this.masterVolume,this.soundEffect.play()}playDotSound(){this.queuedDotSound=!0,this.dotPlayer||(this.queuedDotSound=!1,this.dotSound=1===this.dotSound?2:1,this.dotPlayer=new Audio(`${this.baseUrl}dot_${this.dotSound}.${this.fileFormat}`),this.dotPlayer.onended=this.dotSoundEnded.bind(this),this.dotPlayer.volume=this.masterVolume,this.dotPlayer.play())}dotSoundEnded(){this.dotPlayer=void 0,this.queuedDotSound&&this.playDotSound()}async setAmbience(sound,keepCurrentAmbience){if(!this.fetchingAmbience&&!this.cutscene&&(keepCurrentAmbience?this.paused=!0:(this.currentAmbience=sound,this.paused=!1),this.ambienceSource&&this.ambienceSource.stop(),0!==this.masterVolume)){this.fetchingAmbience=!0;const response=await fetch(`${this.baseUrl}${sound}.${this.fileFormat}`),arrayBuffer=await response.arrayBuffer(),audioBuffer=await this.ambience.decodeAudioData(arrayBuffer);this.ambienceSource=this.ambience.createBufferSource(),this.ambienceSource.buffer=audioBuffer,this.ambienceSource.connect(this.ambience.destination),this.ambienceSource.loop=!0,this.ambienceSource.start(),this.fetchingAmbience=!1}}resumeAmbience(paused){this.ambienceSource&&(paused?this.setAmbience("pause_beat",!0):this.setAmbience(this.currentAmbience))}stopAmbience(){this.ambienceSource&&this.ambienceSource.stop()}}class Timer{constructor(callback,delay){this.callback=callback,this.remaining=delay,this.resume()}pause(systemPause){window.clearTimeout(this.timerId),this.remaining-=new Date-this.start,this.oldTimerId=this.timerId,systemPause&&(this.pausedBySystem=!0)}resume(systemResume){!systemResume&&this.pausedBySystem||(this.pausedBySystem=!1,this.start=new Date,this.timerId=window.setTimeout(()=>{this.callback(),window.dispatchEvent(new CustomEvent("removeTimer",{detail:{timer:this}}))},this.remaining),this.oldTimerId||window.dispatchEvent(new CustomEvent("addTimer",{detail:{timer:this}})))}}
//# sourceMappingURL=app.min.js.map